var JSON5 = "object" == typeof exports ? exports :
{};
JSON5.parse = function()
{
	"use strict";
	var r, n, t, e, f, i, o = {
			"'": "'",
			'"': '"',
			"\\": "\\",
			"/": "/",
			"\n": "",
			b: "\b",
			f: "\f",
			n: "\n",
			r: "\r",
			t: "\t"
		},
		u = [" ", "\t", "\r", "\n", "\v", "\f", "Â ", "\ufeff"],
		a = function(r)
		{
			return "" === r ? "EOF" : "'" + r + "'"
		},
		c = function(e)
		{
			var i = new SyntaxError;
			throw i.message = e + " at line " + n + " column " + t +
				" of the JSON5 data. Still to read: " + JSON.stringify(f
					.substring(r - 1, r + 19)), i.at = r, i.lineNumber = n,
				i.columnNumber = t, i
		},
		s = function(i)
		{
			return i && i !== e && c("Expected " + a(i) + " instead of " +
				a(e)), e = f.charAt(r), r++, t++, ("\n" === e ||
				"\r" === e && "\n" !== l()) && (n++, t = 0), e
		},
		l = function()
		{
			return f.charAt(r)
		},
		p = function()
		{
			var r = e;
			for ("_" !== e && "$" !== e && (e < "a" || e > "z") && (e <
					"A" || e > "Z") && c(
				"Bad identifier as unquoted key"); s() && ("_" === e ||
					"$" === e || e >= "a" && e <= "z" || e >= "A" && e <=
					"Z" || e >= "0" && e <= "9");) r += e;
			return r
		},
		d = function()
		{
			var r, n = "",
				t = "",
				f = 10;
			if ("-" !== e && "+" !== e || (n = e, s(e)), "I" === e)
			return r = N(), ("number" != typeof r || isNaN(r)) && c(
					"Unexpected word for number"), "-" === n ? -r : r;
			if ("N" === e) return r = N(), isNaN(r) || c(
				"expected word to be NaN"), r;
			switch ("0" === e && (t += e, s(), "x" === e || "X" === e ? (
				t += e, s(), f = 16) : e >= "0" && e <= "9" && c(
				"Octal literal")), f)
			{
				case 10:
					for (; e >= "0" && e <= "9";) t += e, s();
					if ("." === e)
						for (t += "."; s() && e >= "0" && e <= "9";) t += e;
					if ("e" === e || "E" === e)
						for (t += e, s(), "-" !== e && "+" !== e || (t += e,
								s()); e >= "0" && e <= "9";) t += e, s();
					break;
				case 16:
					for (; e >= "0" && e <= "9" || e >= "A" && e <= "F" ||
						e >= "a" && e <= "f";) t += e, s()
			}
			return r = "-" === n ? -t : +t, isFinite(r) ? r : void c(
				"Bad number")
		},
		g = function()
		{
			var r, n, t, f, i = "";
			if ('"' === e || "'" === e)
				for (t = e; s();)
				{
					if (e === t) return s(), i;
					if ("\\" === e)
						if (s(), "u" === e)
						{
							for (f = 0, n = 0; n < 4 && (r = parseInt(s(),
									16), isFinite(r)); n += 1) f = 16 * f +
								r;
							i += String.fromCharCode(f)
						}
					else if ("\r" === e) "\n" === l() && s();
					else
					{
						if ("string" != typeof o[e]) break;
						i += o[e]
					}
					else
					{
						if ("\n" === e) break;
						i += e
					}
				}
			c("Bad string")
		},
		y = function()
		{
			"/" !== e && c("Not an inline comment");
			do
				if (s(), "\n" === e || "\r" === e) return void s(); while (
				e)
		},
		b = function()
		{
			"*" !== e && c("Not a block comment");
			do
				for (s();
					"*" === e;)
					if (s("*"), "/" === e) return void s("/"); while (e);
			c("Unterminated block comment")
		},
		v = function()
		{
			"/" !== e && c("Not a comment"), s("/"), "/" === e ? y() :
				"*" === e ? b() : c("Unrecognized comment")
		},
		h = function()
		{
			for (; e;)
				if ("/" === e) v();
				else
				{
					if (!(u.indexOf(e) >= 0)) return;
					s()
				}
		},
		N = function()
		{
			switch (e)
			{
				case "t":
					return s("t"), s("r"), s("u"), s("e"), !0;
				case "f":
					return s("f"), s("a"), s("l"), s("s"), s("e"), !1;
				case "n":
					return s("n"), s("u"), s("l"), s("l"), null;
				case "I":
					return s("I"), s("n"), s("f"), s("i"), s("n"), s("i"),
						s("t"), s("y"), 1 / 0;
				case "N":
					return s("N"), s("a"), s("N"), NaN
			}
			c("Unexpected " + a(e))
		},
		m = function()
		{
			var r = [];
			if ("[" === e)
				for (s("["), h(); e;)
				{
					if ("]" === e) return s("]"), r;
					if ("," === e ? c("Missing array element") : r.push(
					i()), h(), "," !== e) return s("]"), r;
					s(","), h()
				}
			c("Bad array")
		},
		S = function()
		{
			var r, n = {};
			if ("{" === e)
				for (s("{"), h(); e;)
				{
					if ("}" === e) return s("}"), n;
					if (r = '"' === e || "'" === e ? g() : p(), h(), s(":"),
						n[r] = i(), h(), "," !== e) return s("}"), n;
					s(","), h()
				}
			c("Bad object")
		};
	return i = function()
		{
			switch (h(), e)
			{
				case "{":
					return S();
				case "[":
					return m();
				case '"':
				case "'":
					return g();
				case "-":
				case "+":
				case ".":
					return d();
				default:
					return e >= "0" && e <= "9" ? d() : N()
			}
		},
		function(o, u)
		{
			var a;
			return f = String(o), r = 0, n = 1, t = 1, e = " ", a = i(),
			h(), e && c("Syntax error"), "function" == typeof u ?
				function r(n, t)
				{
					var e, f, i = n[t];
					if (i && "object" == typeof i)
						for (e in i) Object.prototype.hasOwnProperty.call(i,
							e) && (f = r(i, e), void 0 !== f ? i[e] =
							f : delete i[e]);
					return u.call(n, t, i)
				}(
				{
					"": a
				}, "") : a
		}
}(), JSON5.stringify = function(r, n, t)
{
	function e(r)
	{
		return r >= "a" && r <= "z" || r >= "A" && r <= "Z" || r >= "0" &&
			r <= "9" || "_" === r || "$" === r
	}

	function f(r)
	{
		return r >= "a" && r <= "z" || r >= "A" && r <= "Z" || "_" === r ||
			"$" === r
	}

	function i(r)
	{
		if ("string" != typeof r) return !1;
		if (!f(r[0])) return !1;
		for (var n = 1, t = r.length; n < t;)
		{
			if (!e(r[n])) return !1;
			n++
		}
		return !0
	}

	function o(r)
	{
		return Array.isArray ? Array.isArray(r) : "[object Array]" ===
			Object.prototype.toString.call(r)
	}

	function u(r)
	{
		return "[object Date]" === Object.prototype.toString.call(r)
	}

	function a(r)
	{
		for (var n = 0; n < g.length; n++)
			if (g[n] === r) throw new TypeError(
				"Converting circular structure to JSON")
	}

	function c(r, n, t)
	{
		if (!r) return "";
		r.length > 10 && (r = r.substring(0, 10));
		for (var e = t ? "" : "\n", f = 0; f < n; f++) e += r;
		return e
	}

	function s(r)
	{
		return y.lastIndex = 0, y.test(r) ? '"' + r.replace(y, function(r)
		{
			var n = b[r];
			return "string" == typeof n ? n : "\\u" + ("0000" + r
				.charCodeAt(0).toString(16)).slice(-4)
		}) + '"' : '"' + r + '"'
	}

	function l(r, n, t)
	{
		var e, f, y = p(r, n, t);
		switch (y && !u(y) && (y = y.valueOf()), typeof y)
		{
			case "boolean":
				return y.toString();
			case "number":
				return isNaN(y) || !isFinite(y) ? "null" : y.toString();
			case "string":
				return s(y.toString());
			case "object":
				if (null === y) return "null";
				if (o(y))
				{
					a(y), e = "[", g.push(y);
					for (var b = 0; b < y.length; b++) f = l(y, b, !1), e +=
						c(d, g.length), e += null === f || "undefined" ==
						typeof f ? "null" : f, b < y.length - 1 ? e += "," :
						d && (e += "\n");
					g.pop(), y.length && (e += c(d, g.length, !0)), e += "]"
				}
				else
				{
					a(y), e = "{";
					var v = !1;
					g.push(y);
					for (var h in y)
						if (y.hasOwnProperty(h))
						{
							var N = l(y, h, !1);
							t = !1, "undefined" != typeof N && null !== N &&
								(e += c(d, g.length), v = !0, n = i(h) ? h :
									s(h), e += n + ":" + (d ? " " : "") +
									N + ",")
						} g.pop(), e = v ? e.substring(0, e.length - 1) + c(
						d, g.length) + "}" : "{}"
				}
				return e;
			default:
				return
		}
	}
	if (n && "function" != typeof n && !o(n)) throw new Error(
		"Replacer must be a function or an array");
	var p = function(r, t, e)
	{
		var f = r[t];
		return f && f.toJSON && "function" == typeof f.toJSON && (f = f
				.toJSON()), "function" == typeof n ? n.call(r, t, f) :
			n ? e || o(r) || n.indexOf(t) >= 0 ? f : void 0 : f
	};
	JSON5.isWord = i;
	var d, g = [];
	t && ("string" == typeof t ? d = t : "number" == typeof t && t >= 0 && (
		d = c(" ", t, !0)));
	var y =
		/[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
		b = {
			"\b": "\\b",
			"\t": "\\t",
			"\n": "\\n",
			"\f": "\\f",
			"\r": "\\r",
			'"': '\\"',
			"\\": "\\\\"
		},
		v = {
			"": r
		};
	return void 0 === r ? p(v, "", !0) : l(v, "", !0)
};
//# sourceMappingURL=json5.min.js.map